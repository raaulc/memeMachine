{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useClipboard = void 0;\nvar clipboard_copy_1 = __importDefault(require(\"clipboard-copy\"));\nvar react_1 = require(\"react\");\nvar useTimedToggle_1 = require(\"./useTimedToggle\");\nfunction isInputLike(node) {\n  return node && (node.nodeName === 'TEXTAREA' || node.nodeName === 'INPUT');\n}\nfunction useClipboard(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _a = useTimedToggle_1.useTimedToggle(false),\n    copied = _a[0],\n    toggleCopied = _a[1];\n  var targetRef = react_1.useRef(null);\n  var optionsRef = react_1.useRef(options);\n  optionsRef.current = options;\n  function isSupported() {\n    return !!navigator.clipboard || typeof document.execCommand === 'function' && typeof document.queryCommandSupported === 'function' && document.queryCommandSupported('copy');\n  }\n  var copyHandler = react_1.useCallback(function (text) {\n    var opts = optionsRef.current;\n    var target = targetRef.current;\n    function handleSuccess() {\n      if (opts.onSuccess) {\n        opts.onSuccess();\n      }\n      if (opts.copiedTimeout) {\n        toggleCopied(opts.copiedTimeout);\n      }\n      if (opts.selectOnCopy && isInputLike(target)) {\n        target.select();\n      }\n    }\n    function handleError() {\n      if (opts.onError) {\n        opts.onError();\n      }\n      if (opts.selectOnError !== false && isInputLike(target)) {\n        target.select();\n      }\n    }\n    function copy(value) {\n      clipboard_copy_1.default(value).then(handleSuccess).catch(handleError);\n    }\n    if (typeof text === 'string') {\n      copy(text);\n    } else if (target) {\n      copy(target.value);\n    }\n  }, []);\n  return {\n    copied: copied,\n    copy: copyHandler,\n    isSupported: isSupported,\n    target: targetRef\n  };\n}\nexports.useClipboard = useClipboard;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","useClipboard","clipboard_copy_1","require","react_1","useTimedToggle_1","isInputLike","node","nodeName","options","_a","useTimedToggle","copied","toggleCopied","targetRef","useRef","optionsRef","current","isSupported","navigator","clipboard","document","execCommand","queryCommandSupported","copyHandler","useCallback","text","opts","target","handleSuccess","onSuccess","copiedTimeout","selectOnCopy","select","handleError","onError","selectOnError","copy","default","then","catch"],"sources":["/Users/rahul.rathod/Desktop/Learning/MemeMachine/mememachine/node_modules/use-clipboard-copy/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useClipboard = void 0;\nvar clipboard_copy_1 = __importDefault(require(\"clipboard-copy\"));\nvar react_1 = require(\"react\");\nvar useTimedToggle_1 = require(\"./useTimedToggle\");\nfunction isInputLike(node) {\n    return node && (node.nodeName === 'TEXTAREA' || node.nodeName === 'INPUT');\n}\nfunction useClipboard(options) {\n    if (options === void 0) { options = {}; }\n    var _a = useTimedToggle_1.useTimedToggle(false), copied = _a[0], toggleCopied = _a[1];\n    var targetRef = react_1.useRef(null);\n    var optionsRef = react_1.useRef(options);\n    optionsRef.current = options;\n    function isSupported() {\n        return (!!navigator.clipboard ||\n            (typeof document.execCommand === 'function' &&\n                typeof document.queryCommandSupported === 'function' &&\n                document.queryCommandSupported('copy')));\n    }\n    var copyHandler = react_1.useCallback(function (text) {\n        var opts = optionsRef.current;\n        var target = targetRef.current;\n        function handleSuccess() {\n            if (opts.onSuccess) {\n                opts.onSuccess();\n            }\n            if (opts.copiedTimeout) {\n                toggleCopied(opts.copiedTimeout);\n            }\n            if (opts.selectOnCopy && isInputLike(target)) {\n                target.select();\n            }\n        }\n        function handleError() {\n            if (opts.onError) {\n                opts.onError();\n            }\n            if (opts.selectOnError !== false && isInputLike(target)) {\n                target.select();\n            }\n        }\n        function copy(value) {\n            clipboard_copy_1.default(value).then(handleSuccess).catch(handleError);\n        }\n        if (typeof text === 'string') {\n            copy(text);\n        }\n        else if (target) {\n            copy(target.value);\n        }\n    }, []);\n    return {\n        copied: copied,\n        copy: copyHandler,\n        isSupported: isSupported,\n        target: targetRef,\n    };\n}\nexports.useClipboard = useClipboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}